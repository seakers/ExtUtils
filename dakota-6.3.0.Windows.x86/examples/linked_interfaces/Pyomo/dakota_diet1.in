# Solve the AMPL diet1 problem: minimize cost subject to buying at
# least one entree, side, and drink.  The optimal objective is 2.81.
#
# The AMPL model files are generated from pyomo:
#   pyomo2dakota diet1.py diet.dat
#
# Technically the decision variables are discrete, but the SQP finds
# the correct solution on the bounds of the domain

method,
	npsol_sqp
	  max_iterations = 50,
	  convergence_tolerance = 1e-12

#--- Dakota variables block ---#
variables
  continuous_design 9
    descriptors
      'Buy[Sausage_McMuffin]'
      'Buy[Orange_Juice]'
      'Buy[Big_Mac]'
      'Buy[Filet-O-Fish]'
      'Buy[Quarter_Pounder_w_Cheese]'
      'Buy[1%_Lowfat_Milk]'
      'Buy[Fries,_small]'
      'Buy[McGrilled_Chicken]'
      'Buy[McLean_Deluxe_w_Cheese]'
    lower_bounds 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
    upper_bounds 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0
#    initial_point None None None None None None None None None
    initial_point 9 * 0.5

#--- Dakota interface block ---#
interface
  algebraic_mappings = 'diet1.nl'

#--- Dakota responses block ---#
responses
  objective_functions 1
  nonlinear_inequality_constraints 3
    lower_bounds 1.0 1.0 1.0
    upper_bounds inf inf inf
    descriptors
      'Total_Cost'
      'Entree'
      'Side'
      'Drink'
  analytic_gradients
  no_hessians
