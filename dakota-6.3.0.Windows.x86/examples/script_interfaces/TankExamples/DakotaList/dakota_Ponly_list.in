# Last tested 131230 - Dakota 5.4
# usage
# dakota dakota_Ponly_lhs.in &> dakota.out

# the list parameter study is the simplest Dakota method
# the variable values for each function evaluation are listed.

environment
  tabular_graphics_data
    tabular_graphics_file 'Ponly_list.dat'

method
  list_parameter_study
    list_of_points =
                  30.914955	2965063.687823	0.271518	61.466027	31.285306	0.218658
                  29.383549	2848875.456256	0.267168	60.012120	31.925307	0.213612
                  30.797583	2701601.315436	0.281288	60.568737	31.739447	0.188231
                  28.143852	2884263.607952	0.255011	61.245390	31.015524	0.235933
                  29.013333	2939723.220757	0.268659	59.882213	30.318027	0.211943
                  30.479152	2869378.436176	0.274302	61.395795	31.354123	0.192569
                  30.520258	2973684.994722	0.270204	60.224775	31.637161	0.233751
                  29.559537	2869562.289873	0.264579	60.800133	31.193604	0.215790
                  28.601983	2892904.009140	0.280305	60.204522	30.131381	0.221258
                  30.753794	2905201.742819	0.262242	61.507842	30.654996	0.224103
                  
model
  single

variables
  active design
  continuous_design = 6
    descriptors =    'P'	'E'		'Nu'		'L'		'R'		'T' 
  continuous_state = 4
    initial_state = 4 		1 	 	0 		1
    descriptors = 'meshID' 	'resultStyle'  'Gamma_Chi' 		'H'

interface
  analysis_driver = 'RunTank.sh' #this uses a bash script to add additional options. EvalTank.py is run from that script
    fork
      parameters_file 'params.in'
      results_file 'Ponly'
      file_tag
  deactivate restart_file
  asynchronous
    evaluation_concurrency 8

responses
  response_functions = 4
    descriptors = 'max_stress_equ' 'X_ind_max_stress' 'Phi_ind_max_stress' 'surface_stress'
  no_gradients
  no_hessians
