#@ *: DakotaConfig=HAVE_AMPL
#@ s0: DakotaConfig=HAVE_NPSOL
#@ s1: DakotaConfig=HAVE_NPSOL
#@ s2: DakotaConfig=HAVE_NPSOL
#@ s3: DakotaConfig=HAVE_NPSOL
# dakota_ampl_tb.in

method,
	npsol_sqp,					#s0,#s1,#s2,#s3
#	optpp_q_newton,					#s4,#s5,#s6,#s7
	  max_iterations = 50,
	  convergence_tolerance = 1e-12

variables,
	continuous_design = 2
	  initial_point    0.9    1.1
	  upper_bounds     5.8    2.9
	  lower_bounds     0.5   -2.9
	  descriptors      'x1'   'x2'

interface,
	  algebraic_mappings = 'dakota_ampl_tb.unc.nl' 	#s0,#s2,#s4,#s6
#	  algebraic_mappings = 'dakota_ampl_tb.nl' 	#s1,#s3,#s5,#s7

responses,
	objective_functions = 1
	response_descriptors = 'obj'			#s0,#s2,#s4,#s6
	nonlinear_inequality_constraints = 0	#s0,#s2,#s4,#s6
#	response_descriptors = 'obj' 'c1' 'c2'		#s1,#s3,#s5,#s7
#	nonlinear_inequality_constraints = 2	#s1,#s3,#s5,#s7
	analytic_gradients				#s0,#s1,#s4,#s5
#	numerical_gradients				#s2,#s3,#s6,#s7
#	  method_source dakota				#s2,#s3,#s6,#s7
#	  interval_type central				#s2,#s3,#s6,#s7
#	  fd_gradient_step_size = 1.e-6			#s2,#s3,#s6,#s7
	no_hessians

