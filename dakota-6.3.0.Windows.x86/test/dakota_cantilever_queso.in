#@ *: DakotaConfig=HAVE_QUESO
#@ p*: MPIProcs=1

method,									
        bayes_calibration queso
# NOTE: typically you will want O(10^4) samples; this is just a short test
         samples = 1000 seed = 348
          dram  # | delayed_rejection | adaptive_metropolis | metropolis_hastings
#         calibrate_error_multipliers per_response            #p4,#p5
            # inverse gamma prior
            #   alpha = (mean/std_dev)^2 + 2
            #   beta = mean*(alpha-1)
            # mean = 1.0, s.d. = 0.2
#           hyperprior_alphas = 27.0                          #p4
#           hyperprior_betas  = 26.0                          #p4
            # mean = 1.5, s.d. = 2.0
#           hyperprior_alphas = 2.5625                        #p5
#           hyperprior_betas  = 2.34375                       #p5
	  proposal_covariance
# diagonal and matrix formats with values
	    diagonal values 1.0e6 1.0e-1				                    #s0,#p0,#p4,#p5
#	    matrix   values 1.0 0.1					                        #p1
#                  	    0.1 2.0					                      #p1
# diagonal and matrix formats from file
#	    diagonal filename 'dakota_cantilever_queso.diag.dat'	  #p2
#	    matrix   filename 'dakota_cantilever_queso.matrix.dat'	#p3
	  logit_transform         # default is off

variables,								
        uniform_uncertain 2
          upper_bounds  1.e8 10.0
# Truth value is 2.85e7 2.5 
          lower_bounds 1.e6 0.1
          initial_point 2.85e7 2.5
          descriptors 'E' 'w' 
        continuous_state 4 
          initial_state 3 40000 500 1000 
          descriptors 't' 'R' 'X' 'Y' 

interface,								
        direct
          analysis_driver = 'mod_cantilever'

responses,								
	calibration_terms = 2
        calibration_data_file = 'dakota_cantilever_queso.withsigma.dat'
          freeform
          num_experiments = 10
	  variance_type = 'scalar' # read 2 scalar sigmas in each row
  	descriptors = 'stress' 'displacement'
 	no_gradients							
	no_hessians
