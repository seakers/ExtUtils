# Reliability analysis using the cantilever test function.

method,
	local_reliability
	  mpp_search no_approx
	  num_response_levels = 0 1 1		#s0,#s1,#s2,#s3
	  response_levels = 0.0 0.0		#s0,#s1,#s2,#s3
#	  compute reliabilities			#s2,#s3
#	  num_probability_levels = 0 1 1	#s4,#s5
#	  probability_levels = .00135 .00135	#s4,#s5
#	  num_reliability_levels = 0 1 1	#s6,#s7
#	  reliability_levels = 3. 3.		#s6,#s7
	  complementary distribution

variables,
	continuous_design = 2
	  initial_point    2.2383436721 5.0812956924  #s0
#	  initial_point    2.2383436724 5.0812956917  #s1
#	  initial_point    2.4368516977 3.8541639805  #s2
#	  initial_point    2.4368516977 3.8541639805  #s3
#	  initial_point    2.4376800635 3.8530510228  #s4
#	  initial_point    2.4485419602 3.8813809238  #s5
#	  initial_point    2.4376831856 3.8530511428  #s6
#	  initial_point    2.4485432927 3.8813846052  #s7
	  descriptors 'w' 't'
	normal_uncertain = 4
	  means             =  40000. 29.E+6 500. 1000.
	  std_deviations    =  2000. 1.45E+6 100. 100.
	  descriptors       =  'R' 'E' 'X' 'Y'

interface,
	direct
	  analysis_driver = 'cantilever'
	  deactivate evaluation_cache restart_file

responses,
	response_functions = 3
	analytic_gradients
	no_hessians
